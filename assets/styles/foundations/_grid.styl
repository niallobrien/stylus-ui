// Grid
// ––––––––––––––––––––––––––––––––––––––––––––––––––


column($namespace, $sizes)
  _column-output($sizes, $namespace)


_column-output($sizes, $namespace = false)
  $namespaceModifier = $namespace ? '-' + $namespace : ''

  for $size in $sizes
    .row .column.column--{$size}{$namespaceModifier}
      if $size == 34 || $size == 67
        $size = ($size - 1)

      flex 0 0 ($size)%
      max-width ($size)%

_column-offsets($sizes)
  for $size in $sizes
    .row .column
      if $size == 34 || $size == 67
        $size = ($size - 1)

      &.column--offset-{$size}
        margin-left ($size)%


// .container is main centered wrapper with a max width of 1120rem (1120px)
.container
  box-sizing border-box
  margin 0 auto
  max-width $base--max-width
  padding 0 $base--spacing
  position relative
  width 100%
  +width-min($mq--desktop)
    padding 0

// Using flexbox for the grid, inspired by Philip Walton:
// http://philipwalton.github.io/solved-by-flexbox/demos/grids/
// By default each .column within a .row will evenly take up
// available width, and the height of each .column with take
// up the height of the tallest .column in the same .row.
.row
  display block
  +width-min($mq--tablet)
    display flex
  flex-direction column
  padding 0
  width 100%

  .row-wrap
    flex-wrap wrap

  .row--no-padding
    padding 0

    & > .column
      padding 0


  // & + .row
  //   margin-top -.5rem
  //   padding-top 0

  // Vertically Align Columns
  // .row--* vertically aligns every .col in the .row
  .row--top
    align-items flex-start

  .row--bottom
    align-items flex-end

  .row--center
    align-items center

  .row--stretch
    align-items stretch

  .row--baseline
    align-items baseline

  .column
    display block
    flex 1
    margin-left 0
    max-width 100%
    width 100%


.row .column
  // .column--* vertically aligns an individual .column
  .col--top
    align-self flex-start

  .col--bottom
    align-self flex-end

  .col--center
    align-self center


// Larger than mobile screen
+width-min($mq--tablet)

  .row
    flex-direction row
    width 100%

    .column
      margin-bottom inherit
      padding 0 $base--spacing * .5
      -webkit-justify-content space-between
      justify-content space-between

      &:first-of-type
        padding-left 0

      &:last-of-type
        padding-right 0

column('', $column-sizes)

+width-max($mq--tablet - 1)
  column('mobile-only', $column-sizes)

+width-min($mq--tablet)
  column('tablet', $column-sizes)

+width-range($mq--tablet, $mq--desktop)
  column('tablet-only', $column-sizes)

+width-min($mq--desktop)
  column('desktop', $column-sizes)

@media print
  column('', $column-sizes)
